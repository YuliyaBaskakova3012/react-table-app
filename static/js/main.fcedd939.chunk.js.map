{"version":3,"sources":["components/common/Preloader/Preloader.jsx","components/common/sortDataFunction.jsx","redux/table-reducer.jsx","components/Table/Table.jsx","components/Table/TableContainer.jsx","components/DataSelection/DataSelection.jsx","components/DataSelection/DataSelectionContainer.jsx","redux/form-reducer.jsx","components/Form/Form.jsx","components/Form/FormContainer.jsx","components/SearchBar/SearchBar.jsx","components/SearchBar/SearchBarContainer.jsx","components/UserChoice/UserChoice.jsx","components/UserChoice/UserChoiceContainer.jsx","components/common/Paginator/Paginator.jsx","components/common/Paginator/PaginatorContainer.jsx","App.jsx","redux/redux-store.jsx","index.jsx"],"names":["className","class","sortDataFunction","sortField","data","sort","sortDirection","cloneData","concat","sort1","sortDirection1","_","orderBy","initialState","isDataSelected","isLoading","search","row","currentPage","modeAdd","pageSize","sortActionCreator","type","dataSelectedThunk","url","dispatch","a","fetch","res","json","console","log","sortData","tableReducer","state","action","id","firstName","lastName","email","phone","selected","result","modeAddChange","onRowSelect","onSort","displayData","chunk","onClick","bind","aria-hidden","length","map","item","key","connect","table","props","valueId","valueFirstName","valueLastName","valueEmail","valuePhone","formReducer","Form","form","changeItem","event","target","value","changeId","changeFirstName","changeLastName","changeEmail","changePhone","onSubmit","preventDefault","elements","addPersonData","formReset","onChange","placeholder","required","disabled","changeIdCreator","changeFirstNameCreator","changeLastNameCreator","changeEmailCreator","changePhoneCreator","addPerson","useState","setValue","filter","toString","toLowerCase","includes","onSearch","getSearchDataCreator","SearchBar","hasOwnProperty","style","width","description","address","streetAddress","city","zip","UserChoice","pageCount","Math","ceil","display","justifyContent","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","pageChangeHandler","containerClassName","activeClassName","pageClassName","pageLinkClassName","previousClassName","nextClassName","previousLinkClassName","nextLinkClassName","forcePage","Paginator","App","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fcedd939.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Preloader.css';\r\nexport default()=><div className='loader-vertical-align'><div class='lds-spinner text-center'><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>","import _ from 'lodash';\r\nexport const sortDataFunction =(sortField, data, sort, sortDirection) => {\r\nconst cloneData =  data.concat();\r\nconst sort1 = sort === 'desc' ? 'asc' : 'desc';\r\nconst sortDirection1 =sortDirection === 'fa fa-arrow-up' ? 'fa fa-arrow-down' : 'fa fa-arrow-up';\r\nconst  data1 = _.orderBy(cloneData, sortField, sort);\r\nreturn [sortField, data1, sort1, sortDirection1];\r\n}\r\nexport default sortDataFunction;","import { sortDataFunction } from '../components/common/sortDataFunction';\r\n\r\nconst DATASELECTED='DATASELECTED';\r\nconst ADDDATA='ADDDATA';\r\nconst MODEADDCHANGE='MODEADDCHANGE';\r\nconst ADDPERSON='ADDPERSON';\r\nconst ONROWSELECT='ONROWSELECT';\r\nconst PAGECHANGE='PAGECHANGE';\r\nconst SEARCHDATA='SEARCHDATA';\r\nconst SORT='SORT';\r\nlet initialState = {\r\nisDataSelected: false,\r\nisLoading: false,\r\ndata: [],\r\nsearch: '',\r\nsort: 'desc',  \r\nsortField: 'id',\r\nrow: null,\r\ncurrentPage: 0,\r\nmodeAdd: false,\r\nsortDirection: 'fa fa-arrow-up',\r\npageSize: 50\r\n};\r\nconst tableReducer = (state = initialState, action) => {\r\nswitch (action.type) {\r\n case DATASELECTED: {\r\nreturn {\r\n...state,\r\nisDataSelected: true,\r\nisLoading: true,\r\n}\r\n }\r\ncase ADDDATA: {\r\nreturn {\r\n...state,\r\nisLoading: false,\r\ndata: action.data\r\n}\r\n}\r\ncase MODEADDCHANGE: {\r\nreturn {\r\n...state,\r\nmodeAdd: !state.modeAdd\r\n}\r\n}\r\ncase ADDPERSON: {\r\nreturn {\r\n...state,\r\ndata: [{id: action.id, firstName: action.firstName, lastName: action.lastName, email: action.email, phone: action.phone}, ...state.data]\r\n }\r\n}\r\ncase ONROWSELECT: {\r\nreturn {\r\n...state,\r\nrow: action.row\r\n}\r\n}\r\ncase PAGECHANGE: {\r\nreturn {\r\n...state,\r\ncurrentPage: action.selected\r\n}\r\n}\r\ncase SEARCHDATA: {\r\nreturn {\r\n...state,\r\n   data: action.result,\r\n   currentPage: 0                 \r\n}\r\n}\r\ncase SORT: {\r\n  return {\r\n  ...state,\r\n     data: action.data,\r\n     sort: action.sort,\r\n     sortField: action.sortField,\r\n     sortDirection: action.sortDirection,\r\n     isLoading: false                 \r\n  }\r\n  }\r\ndefault: return state\r\n}\r\n}\r\nexport const dataSelected = () => ({type: DATASELECTED });\r\nexport const modeAddChange= () => ({type: MODEADDCHANGE });\r\nexport const addPerson = (id, firstName, lastName, email, phone) => ({type: ADDPERSON, id, firstName, lastName, email, phone });\r\nexport const onRowSelect = (row) => ({type: ONROWSELECT, row });\r\nexport const pageChangeHandler = ({selected}) => ({type: PAGECHANGE, selected });\r\nexport const getSearchDataCreator = (result) => ({type: SEARCHDATA, result});\r\nexport const sortActionCreator=(sortField, data, sort, sortDirection)=>({type: SORT, sortField, data, sort, sortDirection});\r\nexport const dataSelectedThunk = (url) => async (dispatch) => {\r\n    dispatch(dataSelected())\r\n    let res= await fetch(url);\r\n    let data=await res.json();\r\n    console.log(data)\r\n    let sortData = sortDataFunction('id', data, 'asc', \"fa fa-arrow-down\");\r\n    dispatch(sortActionCreator(...sortData));      \r\n}\r\nexport default tableReducer;\r\n","import React from 'react';\r\nimport './Table.css';\r\nimport sortDataFunction from '../common/sortDataFunction';\r\nimport _ from 'lodash';\r\nexport default ({data, modeAddChange, onRowSelect, currentPage, sortActionCreator, sort, sortDirection, pageSize})=>{\r\n\r\nlet onSort = sortField => {\r\nlet sortData=sortDataFunction(sortField, data, sort, sortDirection);\r\nsortActionCreator(...sortData);\r\n}      \r\nconst displayData = _.chunk(data, pageSize)[currentPage];\r\nreturn(\r\n    <div>\r\n<button className='btn btn-secondary' onClick={()=>modeAddChange()} >Добавить</button> \r\n    <table className='table bg-light'>\r\n              <thead>\r\n                  <tr>\r\n                      <th className='text-center'><button type='button' className='btn btn-primary' onClick={ onSort.bind(null, 'id')}>ID <i className={sortDirection} aria-hidden='true'></i></button></th>\r\n                      <th className='text-center'><button type='button' className='btn btn-primary' onClick={ onSort.bind(null, 'firstName')}>Имя <i className={sortDirection} aria-hidden='true'></i></button></th>\r\n                      <th className='text-center'><button type='button' className='btn btn-primary' onClick={ onSort.bind(null, 'lastName')}>Фамилия <i className={sortDirection} aria-hidden='true'></i></button></th>\r\n                      <th className='text-center'><button type='button' className='btn btn-primary' onClick={ onSort.bind(null, 'email')}>E-mail <i className={sortDirection} aria-hidden='true'></i></button></th>\r\n                      <th className='text-center'><button type='button' className='btn btn-primary' onClick={ onSort.bind(null, 'phone')}>Телефон <i className={sortDirection} aria-hidden='true'></i></button></th>\r\n                  </tr>\r\n              </thead>\r\n              {data.length?\r\n              <tbody className='text-left bg-light'>\r\n              \r\n              {  displayData.map(item =>(\r\n       <tr key={item.id +item.phone} onClick={onRowSelect.bind(null, item)}>\r\n       <td>{item.id}</td>\r\n            <td>{item.firstName}</td>\r\n           <td>{item.lastName}</td>\r\n           <td>{item.email}</td>\r\n           <td>{item.phone}</td>\r\n        </tr>\r\n    ))}\r\n              </tbody>:null}\r\n    </table> \r\n          </div>\r\n    );\r\n                  }","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport {dataSelectedThunk, modeAddChange, onRowSelect, sortActionCreator } from '../../redux/table-reducer';\r\nimport Table from './Table';\r\nconst TableContainer =(props)=><>{props.isDataSelected?\r\n            props.isLoading?<Preloader/>:<Table {...props}/>\r\n            :null} \r\n               </>\r\nconst mapStateToProps = (state) => ({\r\ndata: state.table.data,\r\nisDataSelected: state.table.isDataSelected,\r\nisLoading: state.table.isLoading,\r\nmodeAdd: state.table.modeAdd,\r\nrow: state.table.row,\r\ncurrentPage: state.table.currentPage,\r\npageSize: state.table.pageSize,\r\nsort: state.table.sort,\r\nsortDirection: state.table.sortDirection\r\n})\r\nexport default connect(mapStateToProps, {dataSelectedThunk, modeAddChange, onRowSelect, sortActionCreator})(TableContainer);","import React from 'react';\r\nimport './DataSelection.css';\r\nexport default props =>{\r\nconst smallData='http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}';\r\nconst bigData='http://www.filltext.com/?rows=1000&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}';\r\nreturn(\r\n    <div className='vertical-align text-center'>\r\n     <h1>Таблица с данными</h1> \r\n       <div class='row'>\r\n        <div class='col-md-6'><button className='btn btn-primary col-xs-6' onClick={()=>props.dataSelectedThunk(smallData)}>32 элемента</button></div>\r\n        <div class='col-md-6'><button className='btn btn-info col-xs-6' onClick={()=>props.dataSelectedThunk(bigData)}>1000 элементов</button></div>\r\n       </div> \r\n    </div>\r\n)\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {dataSelectedThunk} from '../../redux/table-reducer';\r\nimport DataSelection from './DataSelection';\r\nconst DataSelectionContainer=(props)=><>{props.isDataSelected?null:<DataSelection {...props} />} </>\r\nconst mapStateToProps = (state) => ({\r\ndata: state.table.data,\r\nisDataSelected: state.table.isDataSelected,\r\nisLoading: state.table.isLoading\r\n});\r\nexport default connect(mapStateToProps, {dataSelectedThunk})(DataSelectionContainer);","const CHANGE_ID='CHANGE_ID';\r\nconst CHANGE_FIRST_NAME='CHANGE_FIRST_NAME';\r\nconst CHANGE_LAST_NAME='CHANGE_LAST_NAME';\r\nconst CHANGE_EMAIL='CHANGE_EMAIL';\r\nconst CHANGE_PHONE='CHANGE_PHONE';\r\nconst FORM_RESET='FORM_RESET';\r\nlet initialState = {\r\nvalueId: '',\r\nvalueFirstName: '',\r\nvalueLastName: '',\r\nvalueEmail: '',\r\nvaluePhone: ''\r\n};\r\nconst formReducer = (state = initialState, action) => {\r\nswitch (action.type) {\r\ncase CHANGE_ID: {\r\nreturn {\r\n...state,\r\nvalueId: action.id,\r\n };\r\n}\r\ncase CHANGE_FIRST_NAME: {\r\nreturn {\r\n...state,\r\nvalueFirstName: action.firstName\r\n}\r\n}\r\ncase CHANGE_LAST_NAME: {\r\nreturn {\r\n...state,\r\nvalueLastName: action.lastName\r\n}\r\n}\r\ncase CHANGE_EMAIL: {\r\nreturn {\r\n...state,\r\nvalueEmail: action.email\r\n}\r\n}\r\ncase CHANGE_PHONE: {\r\nreturn {\r\n...state,\r\nvaluePhone: action.phone\r\n}\r\n}\r\ncase FORM_RESET: {\r\nreturn {\r\n...state,\r\nvalueId: '',\r\nvalueFirstName: '',\r\nvalueLastName: '',\r\nvalueEmail: '',\r\nvaluePhone: ''\r\n  }\r\n  }\r\ndefault: return state;\r\n}\r\n}\r\nexport const changeIdCreator = (id) => ({type: CHANGE_ID, id});\r\nexport const changeFirstNameCreator = (firstName) => ({type: CHANGE_FIRST_NAME, firstName});\r\nexport const changeLastNameCreator = (lastName) => ({type: CHANGE_LAST_NAME, lastName});\r\nexport const changeEmailCreator = (email) => ({type: CHANGE_EMAIL, email});\r\nexport const changePhoneCreator = (phone) => ({type: CHANGE_PHONE, phone});\r\nexport const formReset = () => ({type: FORM_RESET});\r\nexport default formReducer;","import React from 'react';\r\nconst Form=(props)=>{\r\n let state = props.form;\r\n let formSubmit=(event)=>{\r\n  event.preventDefault();\r\n        const form=event.target;\r\n        const id=form.elements['id'].value;\r\n        const firstName=form.elements['firstName'].value;\r\n        const lastName=form.elements['lastName'].value;\r\n        const email=form.elements['email'].value;\r\n        const phone=form.elements['phone'].value;\r\n        props.addPersonData(id, firstName, lastName, email, phone);\r\n        props.formReset();\r\n       } \r\n         let changeItem=(event)=>{\r\n         let id=event.target.id;\r\n         let value=event.target.value;\r\n         switch(id){\r\n           case 'id': props.changeId(value)\r\n           break;\r\n           case 'firstName': props.changeFirstName(value)\r\n           break;\r\n           case 'lastName': props.changeLastName(value)\r\n           break;\r\n           case 'email': props.changeEmail(value)\r\n           break;\r\n           case 'phone': props.changePhone(value)\r\n           break;\r\n           default: \r\n         }\r\n        }\r\n        return (\r\n            <form className='text-left' onSubmit={ formSubmit} >\r\n                <input id='id' type='text' value={state.valueId} onChange={changeItem}  placeholder='ID...' required ></input>\r\n                <input id='firstName' type='text' value={state.valueFirstName} onChange={changeItem} placeholder='Имя...' required ></input>\r\n                <input id='lastName' type='text' value={state.valueLastName} onChange={ changeItem } placeholder='Фамилия...' required></input>\r\n                <input id='email' type='email' value={ state.valueEmail} onChange={ changeItem } placeholder='E-mail...' required ></input>\r\n                <input id='phone' type='text' value={ state.valuePhone} onChange={ changeItem } placeholder='Телефон...' required ></input>\r\n                <br/>\r\n                <button type='submit' className='btn btn-secondary' disabled={!(state.valueId&&state.valueFirstName&&state.valueLastName&&state.valueEmail&&state.valuePhone)}>Добавить в таблицу</button>\r\n            </form>\r\n                   )\r\n    }\r\n    export default Form;\r\n    ","import React from 'react';\r\nimport { changeIdCreator, changeFirstNameCreator, changeLastNameCreator, changeEmailCreator, changePhoneCreator, formReset } from \"../../redux/form-reducer\";\r\nimport Form from './Form';\r\nimport {connect} from 'react-redux';\r\nimport { addPerson } from '../../redux/table-reducer';\r\nconst FormContainer=(props)=><>{props.modeAdd?<Form {...props}/>:null} </>   \r\nconst mapStateToProps = (state) => {\r\nreturn {\r\nform: state.form,\r\ndata: state.table.data,\r\nmodeAdd: state.table.modeAdd          \r\n}\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\nreturn {\r\nchangeId: (id) => {\r\ndispatch(changeIdCreator(id));\r\n},\r\nchangeFirstName: (firstName) => {\r\ndispatch(changeFirstNameCreator (firstName));\r\n},\r\nchangeLastName: (lastName) => {\r\ndispatch(changeLastNameCreator (lastName));\r\n},\r\nchangeEmail: (email) => {\r\ndispatch(changeEmailCreator (email));\r\n},\r\nchangePhone: (phone) => {\r\ndispatch(changePhoneCreator (phone));\r\n},\r\naddPersonData: (id, firstName, lastName, email, phone)=>{\r\ndispatch(addPerson(id, firstName, lastName, email, phone))\r\n},\r\nformReset: ()=>{\r\ndispatch(formReset())\r\n}\r\n}\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormContainer);\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\r\nexport default props => {\r\nconst [value, setValue] = useState('')\r\nconst valueChangeHandler = event => {\r\nsetValue(event.target.value)\r\n }\r\nconst onSearch=(search)=>{\r\nlet result = props.data.filter(item => {\r\n    return (\r\n      item['id'].toString().toLowerCase().includes(search.toLowerCase())||\r\n      item['firstName'].toLowerCase().includes(search.toLowerCase()) ||\r\n      item['lastName'].toLowerCase().includes(search.toLowerCase()) ||\r\n      item['email'].toLowerCase().includes(search.toLowerCase())||\r\n      item['phone'].toLowerCase().includes(search.toLowerCase())\r\n    );\r\n  });\r\n props.onSearch(result);\r\n setValue('');\r\n}\r\nreturn (\r\n<div className='input-group mb-3 mt-3'>\r\n<div className='input-group-prepend'>\r\n<button\r\nclassName='btn btn-outline-secondary'\r\nonClick={() => onSearch(value)}\r\n >Найти</button>\r\n</div>\r\n <input type='text' className='form-control' onChange={valueChangeHandler} value={value}\r\n/>\r\n</div>  \r\n);\r\n}\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {getSearchDataCreator} from '../../redux/table-reducer';\r\nimport SearchBar from './SearchBar';\r\nconst SearchBarContainer=(props)=><>{props.isDataSelected?\r\nprops.isLoading?null:\r\n<SearchBar {...props}/>:null} \r\n</>\r\nconst mapStateToProps = (state) => {\r\nreturn {\r\nsearch: state.table.search,\r\ndata: state.table.data,\r\nisDataSelected: state.table.isDataSelected,\r\nisLoading: state.table.isLoading           \r\n}\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\nreturn {\r\nonSearch: (result) => {\r\ndispatch(getSearchDataCreator (result));\r\n}\r\n}\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBarContainer);\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nexport default props => (\r\n    <div>\r\n    <p>Выбран пользователь <b>{props.row.firstName + ' ' + props.row.lastName}</b></p>\r\n    {props.row.hasOwnProperty('description')?<div > <p>Описание: <br />\r\n    <textarea style={{width: '100%'}} className='text-center' value={props.row.description} />\r\n    </p></div>:null}\r\n    {props.row.hasOwnProperty('address')?<div><p>Адрес проживания: <b>{props.row.address.streetAddress}</b></p>\r\n    <p>Город: <b>{props.row.address.city}</b></p>\r\n    <p>Провинция/штат: <b>{props.row.address.state}</b></p>\r\n    <p>Индекс: <b>{props.row.address.zip}</b></p></div>:null\r\n   }\r\n  </div>\r\n)\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport UserChoice from './UserChoice';\r\nconst UserChoiceContainer=(props)=><>{props.row?<UserChoice {...props}/>:null} </>\r\nconst mapStateToProps = (state) => {\r\nreturn {\r\nrow: state.table.row           \r\n}\r\n}\r\nexport default connect(mapStateToProps)(UserChoiceContainer);\r\n\r\n\r\n","import React from 'react';\r\nimport ReactPaginate from 'react-paginate';\r\nexport default props =>{\r\nconst pageCount = Math.ceil(props.data.length / props.pageSize);\r\n\r\nreturn(\r\n<div>\r\n{props.data.length > props.pageSize\r\n?<div className='container text-center' style={{display: 'flex', width: '400px', justifyContent: 'center'}}><ReactPaginate  style={{width: '400px'}}\r\npreviousLabel={'<'}\r\nnextLabel={'>'}\r\nbreakLabel={'...'}\r\nbreakClassName={'break-me'}\r\npageCount={pageCount}\r\nmarginPagesDisplayed={2}\r\npageRangeDisplayed={5}\r\nonPageChange={props.pageChangeHandler}\r\ncontainerClassName={'pagination'}\r\nactiveClassName={'active'}\r\npageClassName='page-item'\r\npageLinkClassName='page-link'\r\npreviousClassName='page-item'\r\nnextClassName='page-item'\r\npreviousLinkClassName='page-link'\r\nnextLinkClassName='page-link'\r\nforcePage={props.currentPage}\r\n/></div>: null\r\n   } \r\n</div>\r\n)\r\n }\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {pageChangeHandler, sortActionCreator} from '../../../redux/table-reducer';\r\nimport {connect} from 'react-redux';\r\nimport Paginator from './Paginator';\r\n\r\nconst PaginatorContainer =(props)=><Paginator {...props}/> \r\nconst mapStateToProps = (state) => {\r\nreturn {\r\n  data: state.table.data,\r\n  currentPage: state.table.currentPage,\r\n  pageSize: state.table.pageSize,\r\n  sortField: state.table.sortField,\r\n  sort: state.table.sort,\r\n  sortDirection: state.table.sortDirection\r\n}\r\n}\r\nexport default connect(mapStateToProps, {pageChangeHandler, sortActionCreator})( PaginatorContainer);\r\n","import React from 'react';\r\nimport TableContainer from './components/Table/TableContainer';\r\nimport DataSelectionContainer from './components/DataSelection/DataSelectionContainer';\r\nimport FormContainer from './components/Form/FormContainer';\r\nimport SearchBarContainer from './components/SearchBar/SearchBarContainer';\r\nimport UserChoiceContainer from './components/UserChoice/UserChoiceContainer';\r\nimport PaginatorContainer from './components/common/Paginator/PaginatorContainer';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nexport const App=() => {\r\n  return (\r\n    <HashRouter>\r\n    <DataSelectionContainer/>\r\n    <FormContainer/>\r\n    <TableContainer/>\r\n    <PaginatorContainer/>\r\n    <UserChoiceContainer/>\r\n    <SearchBarContainer/>\r\n    </HashRouter>\r\n  );\r\n}\r\nexport default App;","import {applyMiddleware, combineReducers, createStore, compose} from 'redux';\r\n\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport formReducer from './form-reducer';\r\nimport tableReducer from './table-reducer';\r\nconst reducers = combineReducers({\r\n    table: tableReducer,\r\n    form: formReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport {Provider} from 'react-redux';\r\nimport store from './redux/redux-store';\r\nReactDOM.render(\r\n      <Provider store={store}>\r\n          <App/>\r\n      </Provider>, document.getElementById('root'))\r\n\r\n\r\n"],"sourceRoot":""}